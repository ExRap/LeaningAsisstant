"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.bundle = void 0;
const webpack_1 = require("webpack");
function bundle(entryFilePath, mode, externals, module, plugins, outputPath, outputFile, _resolve, resolveLoader) {
    return new Promise((resolve, reject) => {
        const compiler = (0, webpack_1.webpack)({
            entry: entryFilePath,
            target: "node",
            cache: true,
            externals: externals,
            mode,
            node: false,
            module,
            resolve: _resolve,
            resolveLoader,
            plugins: plugins,
            // compilation stats json
            output: {
                path: outputPath,
                filename: outputFile,
                library: "genezio",
                libraryTarget: "commonjs"
            }
        });
        compiler.run((error, stats) => __awaiter(this, void 0, void 0, function* () {
            if (error) {
                console.error(error);
                reject(error);
                return;
            }
            if (stats === null || stats === void 0 ? void 0 : stats.hasErrors()) {
                resolve(stats === null || stats === void 0 ? void 0 : stats.toJson().errors);
                // exit(1);
            }
            compiler.close((closeErr) => {
                /* TODO: handle error? */
            });
            resolve(undefined);
        }));
    });
}
exports.bundle = bundle;
